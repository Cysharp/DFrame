@page "/failure"

@using DFrame.Web.Data
@using DFrame.Web.Models
@using DFrame.Web.Components
@inject ISummaryService SummaryService
@inject ILoggingService LoggingService

<SummaryComponent Summary="@summary"></SummaryComponent>

<h1>Failure</h1>

<div>
    @if (logs == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>TimeStamp</th>
                    <th>Method</th>
                    <th>Path</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var log in logs)
                {
                    <tr>
                        <td>@log.TimeStamp</td>
                        <td>@log.Method</td>
                        <td>@log.Path</td>
                        <td>@log.Message</td>
                    </tr>
                }
            </tbody>
        </table>

        <button class="btn btn-primary" @onclick="Refresh">Refresh</button>
        <button class="btn btn-warning" @onclick="Clear">Clear</button>
    }
</div>

@code {
    private Failure[] logs;
    private Summary summary;

    protected override async Task OnInitializedAsync()
    {
        logs = LoggingService.GetExceptionLogs();
        summary = SummaryService.Summary;
    }

    private void Refresh()
    {
        logs = LoggingService.GetExceptionLogs();
    }
    private void Clear()
    {
        LoggingService.Clear();
        logs = Array.Empty<Failure>();
    }
}

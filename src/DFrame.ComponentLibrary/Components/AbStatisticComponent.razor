<div>
    @if (Statistic == null)
    {
        <p><em>Waiting execute...</em></p>
    }
    else
    {
        <p>Summary (AB Style)</p>
        <table class="table statistics">
            <tbody>
                <tr>
                    <th>Scaling Type</th>
                    <td>@Statistic.ScalingType</td>
                </tr>
                <tr>
                    <th>Scenario Name</th>
                    <td>@Statistic.ScenarioName</td>
                </tr>
                <tr>
                    <th>Request Count</th>
                    <td>@Statistic.RequestCount</td>
                </tr>
                <tr>
                    <th>Process Count</th>
                    <td>@Statistic.ProcessCount</td>
                </tr>
                <tr>
                    <th>Worker Per Process</th>
                    <td>@Statistic.WorkerPerProcess</td>
                </tr>
                <tr>
                    <th>Execute Per Worker</th>
                    <td>@Statistic.ExecutePerWorker</td>
                </tr>
                <tr>
                    <th>Concurrenty level</th>
                    <td>@Statistic.ConcurrencyLevel</td>
                </tr>
                <tr>
                    <th>Complete requests</th>
                    <td>@Statistic.CompleteRequests</td>
                </tr>
                <tr>
                    <th>Failed Request</th>
                    <td>@Statistic.FailedRequests</td>
                </tr>
                <tr>
                    <th>Time taken for tests</th>
                    <td>@Statistic.TimeTaken.ToString("F2") seconds</td>
                </tr>
                <tr>
                    <th>Requests per seconds</th>
                    <td>@Statistic.RequestsPerSeconds.ToString("F2") [#/sec] (mean)</td>
                </tr>
                <tr>
                    <th>Time per request</th>
                    <td>@Statistic.TimePerRequest.ToString("F2") [ms] (mean)</td>
                </tr>
                <tr>
                    <th>Time per request</th>
                    <td>@Statistic.TimePerRequest2.ToString("F2") [ms] (mean, across all concurrent requests)</td>
                </tr>
            </tbody>
        </table>

        <p>Percentage of the requests served within a certain time (ms)</p>
        <table class="table">
            <tbody>
                @foreach (var percentile in Statistic.Percentiles)
                {
                    <tr>
                        <th>@percentile.percentile%</th>
                        <td>@percentile.value</td>
                        <td>@percentile.note</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <button class="btn btn-primary" @onclick="Refresh">Refresh</button>
</div>

@code {
    [Parameter] public AbStatistic Statistic { get; set; }
    [Parameter] public Func<Task> OnRefresh { get; set; }

    private async Task Refresh()
    {
        await OnRefresh?.Invoke();
    }
}

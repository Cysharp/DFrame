@*add DFrame page*@
@page "/execute"

@inject ExecuteService ExecuteService
@inject ISummaryService SummaryService
@inject IStatisticsService StatisticsService

<SummaryComponent Summary="@summary"></SummaryComponent>

<h1>Execute</h1>

<ExecuteInputComponent HostAddress="@hostAddress" ExecuteArgument="@executeArgument" Status="@status" OnClickExecute="@OnClickExecute" OnClickStop="@OnClickStop"></ExecuteInputComponent>
<ExecuteOutputComponent ExecuteId="@context?.ExecuteId" HostAddress="@context?.HostAddress" Status="@context?.Status" Args="@context?.ExecuteArgument.Arguments"></ExecuteOutputComponent>

@code {
    private IExecuteContext context;
    private string hostAddress;
    private ExecuteArgument executeArgument;

    private string status => context?.Status;
    private Summary summary;

    protected override Task OnInitializedAsync()
    {
        context = ExecuteService.ExecuteContext;
        summary = SummaryService.Summary;
        InitProperty();
        return Task.CompletedTask;
    }

    private void InitProperty()
    {
        hostAddress = context?.HostAddress;
        executeArgument = context?.ExecuteArgument ?? new ExecuteArgument();
    }

    private async Task OnClickExecute(string hostAddress, int processCount, int workerPerProcess, int executePerWorker, string workerName)
    {
        context = ExecuteService.CreateContext(hostAddress, processCount, workerPerProcess, executePerWorker, workerName);
        var exec = ExecuteService.ExecuteAsync();
        InitProperty();
        StateHasChanged();
        await exec;
    }
    private async Task OnClickStop()
    {
        await ExecuteService.StopAsync();
        StateHasChanged();
    }
}
